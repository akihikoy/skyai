// agent file for maze2d task
// test of the MAVFOrganizer + MFittedQIterationSL
// NOTE: lmanager and environment must be defined in this file

module  MBasicLearningManager                                 , lmanager
module  MMazeEnvironment                                      , environment
module  MBasisFunctionsNGnet                                  , ngnet
module  MAVFOrganizer                                         , avf_organizer
module  MAVFLinearDiscAction                                  , avf_linear
module  MAVFWireFittingGridBase                               , avf_wire_fitting
module  MRadialActionSpace                                    , radial_action_d
module  MRadialActionSpace2                                   , radial_action_c
module  MNavigationTask                                       , task
module  MRemoveSignalArguments_TComposite1                    , exec_action
module  MRewardAccumulator                                    , rwd_accumulator
module  MFittedQIterationSL_TCompositeState_TCompositeAction  , behavior
module  MTimedResourceXX_TRealVector                          , tr_state
module  MTimedResourceXY_TRealVector_TRealVector              , tr_ngnet
module  MUserEmittedTimer                                     , timer
module  MSimpleDataLogger2_TInt_TReal                         , logger_eps_return
module  MUniversalDataLogger                                  , logger_action_result
module  MHolder_TComposite1                                   , holder_action

/// initialization process:
connect  lmanager.signal_initialization                ,environment.slot_initialize
connect  lmanager.signal_initialization                ,task.slot_initialize
connect  lmanager.signal_initialization                ,ngnet.slot_initialize
connect  ngnet.slot_initialize_finished                ,radial_action_c.slot_initialize
connect  ngnet.slot_initialize_finished                ,radial_action_d.slot_initialize
connect  ngnet.slot_initialize_finished                ,avf_organizer.slot_initialize
connect  ngnet.slot_initialize_finished                ,avf_linear.slot_initialize
connect  ngnet.slot_initialize_finished                ,avf_wire_fitting.slot_initialize
connect  radial_action_c.slot_initialize_finished         ,behavior.slot_initialize
connect  lmanager.signal_initialization                ,logger_eps_return.slot_initialize
connect  lmanager.signal_initialization                ,logger_action_result.slot_initialize

/// start of episode process:
connect  lmanager.signal_start_of_episode              ,tr_ngnet.slot_reset
connect  tr_ngnet.slot_reset_finished                  ,tr_state.slot_reset
connect  tr_state.slot_reset_finished                  ,timer.slot_reset
connect  timer.slot_reset_finished                     ,environment.slot_start_episode
connect  environment.slot_start_episode_finished       ,behavior.slot_start_episode
connect  environment.slot_start_episode_finished       ,task.slot_start_episode
connect  environment.slot_start_episode_finished       ,avf_organizer.slot_reset
connect  environment.slot_start_episode_finished       ,avf_linear.slot_reset
connect  environment.slot_start_episode_finished       ,avf_wire_fitting.slot_reset

/// start of time step process:
connect  environment.signal_start_of_timestep          ,timer.slot_start_step
connect  timer.signal_start_of_step                    ,radial_action_c.slot_start_time_step
connect  timer.signal_start_of_step                    ,radial_action_d.slot_start_time_step

/// end of time step process:
connect  environment.signal_end_of_timestep            ,timer.slot_finish_step
connect  timer.signal_end_of_step                      ,task.slot_finish_time_step
connect  task.slot_finish_time_step_finished           ,radial_action_c.slot_finish_time_step
connect  task.slot_finish_time_step_finished           ,radial_action_d.slot_finish_time_step

/// learning signals:
connect  behavior.signal_execute_action                ,avf_organizer.slot_execute_composite_action
connect  behavior.signal_execute_action                ,exec_action.slot_in
connect  behavior.signal_execute_action                ,holder_action.slot_1
connect  avf_organizer.signal_execute_action_d         ,radial_action_d.slot_execute_action
connect  avf_organizer.signal_execute_action_c         ,radial_action_c.slot_execute_action
connect  exec_action.signal_out                        ,rwd_accumulator.slot_reset
connect  radial_action_c.signal_execute_command        ,environment.slot_execute_command
connect  radial_action_c.signal_end_of_action          ,behavior.slot_finish_action
connect  radial_action_d.signal_execute_command        ,environment.slot_execute_command
connect  radial_action_d.signal_end_of_action          ,behavior.slot_finish_action
connect  behavior.signal_avf_add_to_parameter          ,avf_organizer.slot_add_to_parameter
connect  avf_organizer.signal_avf_add_to_parameter     ,avf_linear.slot_add_to_parameter
connect  avf_organizer.signal_avf_add_to_parameter     ,avf_wire_fitting.slot_add_to_parameter
connect  behavior.signal_end_of_action                 ,logger_action_result.slot_log

connect  task.signal_goal_reward                       ,rwd_accumulator.slot_add
connect  environment.signal_system_reward              ,rwd_accumulator.slot_add

connect  environment.signal_end_of_episode             ,behavior.slot_finish_episode
connect  task.signal_end_of_episode                    ,behavior.slot_finish_episode

connect  behavior.signal_end_of_episode                ,logger_eps_return.slot_log
connect  logger_eps_return.slot_log_finished           ,logger_action_result.slot_newline
connect  logger_action_result.slot_newline_finished    ,lmanager.slot_finish_episode

/// I/O:
connect  radial_action_d.out_action_set_size           ,avf_linear.in_action_set_size
connect  rwd_accumulator.out_sum                       ,behavior.in_reward
connect  environment.out_position                      ,tr_state.in_x
connect  ngnet.out_f2                                  ,tr_ngnet.in_converter
connect  tr_state.out_x                                ,task.in_position
connect  timer.out_disc_time                           ,tr_ngnet.in_disc_time
connect  timer.out_disc_time                           ,tr_state.in_disc_time
connect  tr_state.out_x                                ,tr_ngnet.in_x

connect  avf_organizer.out_composite_state             ,behavior.in_state
connect  environment.out_situation                     ,avf_organizer.in_situation
connect  lmanager.out_episode_number                   ,avf_organizer.in_episode_number
connect  avf_organizer.out_evaluate                    ,behavior.in_avf_evaluate
connect  avf_organizer.out_greedy                      ,behavior.in_avf_greedy
connect  avf_organizer.out_select_action               ,behavior.in_avf_select_action
connect  avf_organizer.out_create_parameter            ,behavior.in_avf_create_parameter
connect  avf_organizer.out_zero_parameter              ,behavior.in_avf_zero_parameter

connect  tr_ngnet.out_y                                ,avf_linear.in_feature
connect  lmanager.out_episode_number                   ,avf_linear.in_episode_number
connect  avf_linear.out_feature                        ,avf_organizer.in_avf_state_c
connect  avf_linear.out_evaluate                       ,avf_organizer.in_avf_evaluate_cd
connect  avf_linear.out_greedy                         ,avf_organizer.in_avf_greedy_cd
connect  avf_linear.out_select_action                  ,avf_organizer.in_avf_select_action_d
connect  avf_linear.out_replacing_trace                ,avf_organizer.in_avf_replacing_trace
connect  avf_linear.out_create_parameter               ,avf_organizer.in_avf_create_parameter
connect  avf_linear.out_zero_parameter                 ,avf_organizer.in_avf_zero_parameter

connect  tr_ngnet.out_y                                ,avf_wire_fitting.in_feature
connect  lmanager.out_episode_number                   ,avf_wire_fitting.in_episode_number
connect  avf_wire_fitting.out_feature                  ,avf_organizer.in_avf_state_c
connect  avf_wire_fitting.out_evaluate                 ,avf_organizer.in_avf_evaluate_cc
connect  avf_wire_fitting.out_greedy                   ,avf_organizer.in_avf_greedy_cc
connect  avf_wire_fitting.out_select_action            ,avf_organizer.in_avf_select_action_c
connect  avf_wire_fitting.out_replacing_trace          ,avf_organizer.in_avf_replacing_trace
connect  avf_wire_fitting.out_create_parameter         ,avf_organizer.in_avf_create_parameter
connect  avf_wire_fitting.out_zero_parameter           ,avf_organizer.in_avf_zero_parameter

connect  lmanager.out_episode_number                   ,logger_eps_return.in_data1
connect  behavior.out_return_in_episode                ,logger_eps_return.in_data2

connect  lmanager.out_episode_number                   ,logger_action_result.in_data_int
connect  timer.out_cont_time                           ,logger_action_result.in_data_real
connect  rwd_accumulator.out_last_accessed             ,logger_action_result.in_data_real
connect  behavior.out_td_error                         ,logger_action_result.in_data_real
connect  behavior.out_current_action_value             ,logger_action_result.in_data_real
connect  tr_state.out_x                                ,logger_action_result.in_data_real_vector
connect  holder_action.out_1                           ,logger_action_result.in_data_composite1


/// parameter setting:

lmanager.config ={
    MaxEpisodeNumber = 2000
  }

task.config ={
    MaxTime = 100
  }

behavior.config={
    Gamma = 0.9
    Alpha = 0.01
    AlphaDecreasingFactor = 0.00
    LSMethodType = "mtBatch"
    SqErrGradientNormLimit = 10.0
    FQICycle = 10
    MaxNumberOfQIteration = 1
    MaxNumberOfSLIteration = 3
    MinRewardDeviationRate = 0.1
    SameSampleThreshold = 0.001
    NumberOfUsedSamples = 0
  }

ngnet.config={
    NGnetFileName = "materials/ngnet222g.dat"
  }

avf_organizer.config={
    ActionSelection = "asBoltzman"
    PolicyImprovement = "piExpReduction"
    Tau = 0.1
    TauDecreasingFactor = 0.005

    OrderOfLower ={
        ["avf_linear"]= 0
        ["avf_wire_fitting"]= 1
      }
    OrderOfController ={
        ["radial_action_d.slot_execute_action"]= 0
        ["radial_action_c.slot_execute_action"]= 1
      }
    AvailableSituations ={
        ["avf_linear"      ]= "0"
        ["avf_wire_fitting"]= "1"
      }
  }

avf_linear.config={
    ActionSelection = "asBoltzman"
    PolicyImprovement = "piExpReduction"
    Tau = 0.1
    TauDecreasingFactor = 0.005
    TraceMax = 1.0
  }

avf_wire_fitting.config={
    ActionMin = (-3.14159265, 0.03, 0.1)
    ActionMax = (3.14159265, 0.03, 0.1)
    ActionDim = 3
    SmoothingFactor = 0.001
    Tiny = 0.0001
    WireSize = 20
    ActionSelection = "asWFBoltzman"
    NoiseFactor = 0.0
    PolicyImprovement = "piExpReduction"
    Tau = 0.1
    TauDecreasingFactor = 0.005
    TraceMax ={
        clear()
        resize(1)
        [0]= 1.0e+10
      }
    Levels = (11, 1, 1)
    Radiuses = (1, 0.0, 0.0)
  }

logger_eps_return.config={
    FileName = "log-eps-ret.dat"
  }

logger_action_result.config ={
    FileName = "log-action-res.dat"
    OrderOfColumns ={
        ["lmanager.out_episode_number"]= 1
        ["timer.out_cont_time"]= 2
        ["rwd_accumulator.out_last_accessed"]= 4
        ["behavior.out_td_error"]= 5
        ["behavior.out_current_action_value"]= 6
        ["tr_state.out_x"]= 8
        ["holder_action.out_1"]= 10
      }
    PutBlankData = true
  }

