// Discrete action set DCOB

include_once "bftrans"

def make_dcob(bftrans_type)
{
  module  bftrans_type  bftrans

  module  MActionSetDCOB  dcob

  export_bftrans_cmn(bftrans)

  /// initialization process:
  export   bftrans.slot_initialize  as_is

  /// learning signals:
  export   dcob.slot_execute_action  as_is
  connect  dcob.signal_execute_command , bftrans.slot_execute_action

  /// I/O:
  export   dcob.out_action_set_size  as_is
  export   dcob.in_center_state_set  as_is


  /// parameter setting:

  export dcob.config.IntervalSet  as_is

  export bftrans.config.Cp  as_is
  export bftrans.config.Cd  as_is
}

// Discrete action set DCOB (Cp and Cd are defined as MVectorShuffler_TRealVector)
composite MDCOB1
{
  make_dcob(MBFTrans1)
}

composite MOldDCOB1
{
  inherit MDCOB1

  /// parameter setting:
  bftrans.config ={
      AbbreviateTrajectory    = false
      TrajectoryGeneratorType = "tgtJerkMin"
      ZeroUnspecifiedState    = false
    }
}

// Discrete action set DCOB (Cp and Cd are defined as MConstMultiplier_TRealMatrix_TRealVector)
composite MDCOB2
{
  make_dcob(MBFTrans2)
}

composite MOldDCOB2
{
  inherit MDCOB2

  /// parameter setting:
  bftrans.config ={
      AbbreviateTrajectory    = false
      TrajectoryGeneratorType = "tgtJerkMin"
      ZeroUnspecifiedState    = false
    }
}

