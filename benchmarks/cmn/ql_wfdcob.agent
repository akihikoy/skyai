// Q(lambda)-learning modules for continuous action space
// Using wire fitting DCOB and generic TD learner

include_once "bftrans"

composite MTDWireFittingDCOBBase
{
  module  MAVFWireFittingDCOB  avf_wire_fitting

  include "ql_cmn_wf"

  export avf_wire_fitting.config.DConstraintKind  as_is
  export avf_wire_fitting.config.Interval2Set     as_is
}

composite MTDWireFittingDCOB
{
  inherit  MTDWireFittingDCOBBase

  export   behavior.signal_execute_action  as_is
  export   behavior.slot_finish_action  as_is

  export   avf_wire_fitting.in_distance_to_nearest_bf  as_is
  export   avf_wire_fitting.in_center_state_set  as_is
}

// This module includes an action space
// NOTE:  out_extract_proportional should be connected to MBasisFunctionsDCOBNGnet-ngnet.in_extract_proportional
composite MTDWireFittingDCOBActSp
{
  inherit  MTDWireFittingDCOBBase

export   behavior.signal_execute_action  as_is  // for debug
  module   MRemoveSignalArguments_TRealVector  signal_start_of_action
  connect  behavior.signal_execute_action ,  signal_start_of_action.slot_in
  export   signal_start_of_action.signal_out  as  signal_start_of_action

  module  MBFTrans1  bftrans
  bftrans.config ={
      SetTargetByState = false
    }

  module  MMediator0_TRealVector in_distance_to_nearest_bf
  export  in_distance_to_nearest_bf.in_1  as  in_distance_to_nearest_bf

  /// initialization process:
  connect  rl_slot_initialize.signal_out           , bftrans.slot_initialize
  /// start of time step process:
  export   bftrans.slot_start_time_step  as_is
  /// end of time step process:
  export   bftrans.slot_finish_time_step  as_is

  /// learning signals:
  connect  behavior.signal_execute_action          , bftrans.slot_execute_action
  export   bftrans.signal_execute_command  as_is
  connect  bftrans.signal_end_of_action            , behavior.slot_finish_action

  /// I/O:
  connect  rl_in_feature.out_1                     , bftrans.in_feature
  export   bftrans.in_state  as_is
  connect  in_distance_to_nearest_bf.out_1         , bftrans.in_distance_to_nearest_bf
  connect  in_distance_to_nearest_bf.out_1         , avf_wire_fitting.in_distance_to_nearest_bf
  export   avf_wire_fitting.in_center_state_set  as_is
  export   bftrans.out_extract_proportional  as_is

  export bftrans.config.AbbreviateTrajectory     as_is
  export bftrans.config.ProportionalDim          as_is
  export bftrans.config.TrajectoryGeneratorType  as_is
  export bftrans.config.ZeroUnspecifiedState     as_is
  export bftrans.config.Cp                       as_is
  export bftrans.config.Cd                       as_is
}
