// agent file for motion learning task of manoi01

//TODO include crawling-cmn.agent

module  MAVFWireFittingGridBase                                , avf_wire_fitting

module  MRemoveSignalArguments_TRealVector                     , exec_action
module  MTDGenericFuncApprox_TContinuousAction                 , behavior

/// initialization process:
connect  ngnet.slot_initialize_finished                 , behavior.slot_initialize
connect  ngnet.slot_initialize_finished                 , avf_wire_fitting.slot_initialize

/// start of episode process:
connect  environment.slot_start_episode_finished        , behavior.slot_start_episode
connect  environment.slot_start_episode_finished        , task.slot_start_episode
connect  environment.slot_start_episode_finished        , avf_wire_fitting.slot_reset

/// start of time step process:

/// end of time step process:

/// learning signals:
connect  behavior.signal_execute_action                 , exec_action.slot_in
connect  exec_action.signal_out                         , rwd_accumulator.slot_reset
connect  exec_action.signal_out                         , damage_reward.slot_reset
connect  behavior.signal_avf_add_to_parameter           , avf_wire_fitting.slot_add_to_parameter
connect  behavior.signal_end_of_action                  , logger_action_result.slot_log

connect  environment.signal_end_of_episode              , behavior.slot_finish_episode
connect  task.signal_end_of_episode                     , behavior.slot_finish_episode

connect  behavior.signal_end_of_episode                 , logger_eps_return.slot_log
connect  logger_eps_return.slot_log_finished            , logger_action_result.slot_newline
connect  logger_action_result.slot_newline_finished     , lmanager.slot_finish_episode

/// I/O:
connect  rwd_accumulator.out_sum                        , behavior.in_reward

connect  tr_ngnet.out_y                                 , avf_wire_fitting.in_feature
connect  lmanager.out_episode_number                    , avf_wire_fitting.in_episode_number
connect  avf_wire_fitting.out_select_action             , behavior.in_avf_select_action
connect  avf_wire_fitting.out_replacing_trace           , behavior.in_avf_replacing_trace
connect  avf_wire_fitting.out_create_parameter          , behavior.in_avf_create_parameter
connect  avf_wire_fitting.out_zero_parameter            , behavior.in_avf_zero_parameter


connect  behavior.out_return_in_episode                 , logger_eps_return.in_data2

connect  behavior.out_td_error                          , logger_action_result.in_data_real
connect  behavior.out_current_action_value              , logger_action_result.in_data_real


/// parameter setting:

behavior.config={
    UsingEligibilityTrace = true
    UsingReplacingTrace = true
    Alpha = 0.3
    AlphaDecreasingFactor = 0.002
    Gamma = 0.9
    Lambda = 0.9
    GradientMax = 1.0
  }
avf_wire_fitting.config={
    ActionMin = (-1.0, -1.0, -1.0, -1.0, -1.0)
    ActionMax = (1.0, 1.0, 1.0, 1.0, 1.0)
    ActionDim = 5
    SmoothingFactor = 0.001
    Tiny = 0.0001
    WireSize = 20
    ActionSelection = "asWFBoltzman"
    NoiseFactor = 0.0
    PolicyImprovement = "piExpReduction"
    Tau = 5
    TauDecreasingFactor = 0.004
    TraceMax ={
        clear()
        resize(1)
        [0]= 1.0e+10
      }
    // for MAVFWireFittingGridBase:
    Levels = (3, 3, 3, 3, 3)
    Radiuses = (0.4, 0.4, 0.4, 0.4, 0.4)
  }


// for direct action space

module  MLCHolder_TRealVector                                  , direct_action
module  MConstMultiplier_TRealVector_TRealVector               , action_multiplier

/// initialization process:

/// start of episode process:

/// start of time step process:
connect  timer.signal_start_of_step_ud1                 , direct_action.slot_start_time_step

/// end of time step process:
connect  timer.signal_end_of_step_ud1                   , direct_action.slot_finish_time_step

/// learning signals:
connect  behavior.signal_execute_action                 , action_multiplier.slot_x
connect  action_multiplier.signal_y                     , direct_action.slot_execute_action
connect  direct_action.slot_execute_action_finished     , holder_action.slot_1
connect  direct_action.signal_execute_command           , environment.slot_execute_command_des_qd
connect  direct_action.signal_end_of_action             , behavior.slot_finish_action

/// I/O:

/// parameter setting:
action_multiplier.config ={
    Factor = (0.261799, 0.261799, 0.261799, 0.261799, 0.261799)
  }
direct_action.config ={
    Interval = 0.1
  }
