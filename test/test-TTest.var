x = 1
y = -12 * (2 + 0.5)
z = (2.1, -1.0) * (2,2) + (1,1)

a = ()
str = "hoge\nhoge"+"--"
b=(3==3)
m = {
    clear()
    ["a"]=2.1
    [""]=-1.2
    ["hoge hoge"]=10
  }
blist = (false,true,3==2,3>=2.5)

_B01 = {
    clear()
    resize(3)
    []=(1,2,3)
    [1]=(2)
    [2]=()
  }
cells = {
    clear()
    []={x=1;y=2;}
    []={x=-2.5;y=-3.5;}
    []={;}
  }
cell = {x=20; y=0.1; z=(1.2,-1,0.0);}

x= cast<real>(cell.y) * cast<real>(cell.x) + cast<int>(y) + cast<int>(true)
x= cast<int>(x)+1+cast<int>(cells[0].y)

blist= !cast<list<bool> >(cell.z) || !cast<list<bool> >((0,1,-1))

// cells = {
    // []= 2+clear()
  // }

// x= 2+func(a)
// func(a)

y=exp(1)
y=sin(-1.57)
y=fabs(sin(-1.57))
y=pow(1.5,2)
y=log(exp(3))
y=log10(pow(10,5))
y=round(exp(1))

print "----"
print cast<real>(y)
print cast<list<bool> >(blist)
print and(cast<list<bool> >(blist))
print or(cast<list<bool> >(blist))
print "----"
z=(1.5,2.5,3.5)
print cast<list<real> >(z)
print shuffle(cast<list<real> >(z),(2,0))
print norm(cast<list<real> >(z))
print "----"
print "----"
z=(-0.078,6.6e-12,1,2,3,4,5)
print shuffle(cast<list<real> >(z),(0,1))
print norm(shuffle(cast<list<real> >(z),(0,1)))
print "----"

z= cast<list<real> >(z)*2.0+1

// z= increment(cast<list<real> >(z))
// y= pi()

z= cast<list<real> >(this.z)*2.0

// inline_include(this,"../test/test-TTest2.var")
finclude(this,"test-TTest2.var")

// dcopy(cell,cells[2])
// dcopy(cells[2],cell)
// dcopy(cells[1],cells[2])
// dcopy(this,cells[2])
// dcopy(cells[2],this)

